# -*- coding: utf-8 -*-
"""Logistic_Regression.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19DIsnEWvKn5PhvIXDG3LRUF5Q1r8LSwB
"""

import pandas as pd
import numpy as np
from sklearn.linear_model import LogisticRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report
import matplotlib.pyplot as plt
import seaborn as sns

# Load dataset (ensure CSV is uploaded in Colab or same directory)
df = pd.read_csv("/content/logistic_regression_sample_dataset.csv")
print("Dataset Preview:")
print(df.head())

# Features and target
X = df[["Hours_Studied"]]
y = df["Passed"]

# Train-test split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Model
model = LogisticRegression()
model.fit(X_train, y_train)

# Prediction
y_pred = model.predict(X_test)
y_prob = model.predict_proba(X_test)[:, 1]

# Evaluation
print("\Accuracy:", accuracy_score(y_test, y_pred))
print("\Confusion Matrix:\n", confusion_matrix(y_test, y_pred))
print("\Classification Report:\n", classification_report(y_test, y_pred))

# Visualize decision boundary
plt.figure(figsize=(8, 5))
x_vals = np.linspace(X.min(), X.max(), 300).reshape(-1, 1)
y_vals = model.predict_proba(x_vals)[:, 1]

plt.scatter(X, y, color='black', label='Data')
plt.plot(x_vals, y_vals, color='red', label='Sigmoid Curve')
plt.xlabel("Hours Studied")
plt.ylabel("Probability of Passing")
plt.title("Logistic Regression - Pass Prediction")
plt.legend()
plt.grid(True)
plt.show()


# Predict for new value (e.g., 7 hours)
new_val = [[7]]
pred_prob = model.predict_proba(new_val)[0][1]
pred_class = model.predict(new_val)[0]

print(f"\nPrediction for 7 hours studied: Probability of pass = {pred_prob:.2f}, Class = {pred_class}")